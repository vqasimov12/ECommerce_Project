<Page x:Class="ECommerce_Project.Views.UserViews.UserHomePageView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ECommerce_Project.Views.UserViews"  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="UserHomePageView" Background="#060405">
    <Page.Resources>
        <!-- Custom Style for Like Button -->
        <Style x:Key="LikeButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0">
                            <Image Source="{Binding LikeImage, UpdateSourceTrigger=PropertyChanged}" 
                               Stretch="UniformToFill"
                               Width="30"
                               Height="25"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Change opacity on hover -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>

                            <!-- Change opacity when button is pressed -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <TextBlock Text="Products"
                   Foreground="White"
                   FontSize="30"
                   HorizontalAlignment="Left"
                   Margin="5 10"/>
        <!-- Existing WrapPanel for Categories, Producers, and Buttons -->
        <!--
        <WrapPanel>
            <ComboBox x:Name="categoriesList" DockPanel.Dock="Left" Margin="25 0 5 0" Width="400" 
                  ItemsSource="{Binding Categories, UpdateSourceTrigger=PropertyChanged}" 
                  DisplayMemberPath="Name" VerticalAlignment="Center" FontSize="20" 
                  SelectedItem="{Binding SelectedCategory}"/>
            <Button Width="45px" Height="45px" Background="Transparent" Command="{Binding RefreshCategories}">
                <Image HorizontalAlignment="Left"/>
            </Button>
            <ComboBox x:Name="producersList" DockPanel.Dock="Left" Margin="20 0 5 0" Width="200" 
                  ItemsSource="{Binding Producers, UpdateSourceTrigger=PropertyChanged}" 
                  DisplayMemberPath="Name" VerticalAlignment="Center" FontSize="20" 
                  SelectedItem="{Binding SelectedProducer}"/>
            <Button Width="45px" Height="45px" Background="Transparent" Command="{Binding RefreshProducers}">
                <Image HorizontalAlignment="Left"/>
            </Button>
        </WrapPanel>-->

        <!-- Filters -->
        <StackPanel Grid.Row="1">

            <StackPanel Orientation="Horizontal"  Margin="5">
                <TextBox Width="200" Margin="5" VerticalAlignment="Center" FontSize="16"
                 Text="{Binding NameFilter, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Search By Name" Foreground="White" />

                <TextBox Width="200" Margin="20 5" VerticalAlignment="Center" FontSize="16"
                 Text="{Binding DescriptionFilter, UpdateSourceTrigger=PropertyChanged}" Foreground="White"
                 materialDesign:HintAssist.Hint="Search by Description" />

            </StackPanel>
            <StackPanel Orientation="Horizontal"  Margin="5">

                <TextBox Width="100"  VerticalAlignment="Center" FontSize="16"
                 Text="{Binding MinPrice, UpdateSourceTrigger=PropertyChanged}"
                 materialDesign:HintAssist.Hint="Min Price" Foreground="White" Margin="10 0"/>

                <TextBox Width="100"  VerticalAlignment="Center" FontSize="16"
                 Text="{Binding MaxPrice, UpdateSourceTrigger=PropertyChanged}"
                 materialDesign:HintAssist.Hint="Max Price" Foreground="White" Margin="10 0"/>

                <ComboBox Name="combobox" materialDesign:HintAssist.Hint="Select a Category"    Foreground="#fef3d6"  ItemsSource="{Binding Categories}"
                  DisplayMemberPath="Name"
                  SelectedItem="{Binding CategoryFilter}"
                  Width="200" Padding="5 0" FontSize="16"  Style="{StaticResource MaterialDesignComboBox}">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Foreground" Value="Black" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Foreground" Value="#060405"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
                <!--<ComboBox Width="150" Margin="20 0" VerticalAlignment="Center" FontSize="16" Foreground="White" Name="combobox"
        ItemsSource="{Binding Categories}"
        DisplayMemberPath="Name"
        SelectedItem="{Binding CategoryFilter}"
        materialDesign:HintAssist.Hint="Select Category" />-->

                <Button  Width="100" Height="35" Command="{Binding ApplyFiltersCommand}"
    CommandParameter="{Binding ElementName=combobox}"   Content="Apply" Margin="20 5"  VerticalAlignment="Center"/>

                <Button Width="100" Height="35" Command="{Binding RefreshCommand}"
       Content="Refresh" Margin="20 5"  VerticalAlignment="Center"/>
            </StackPanel>
        </StackPanel>
        <!-- Existing ScrollViewer and ListView -->
        <ScrollViewer Background="#aeb2b3" Margin="2" Grid.Row="2">
            <ListView Margin="5 20" x:Name="ListViewProducts" ItemsSource="{Binding Products}" 
                  SelectedItem="{Binding SelectedProduct}" ScrollViewer.CanContentScroll="True" 
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0" 
                  Background="Transparent">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border HorizontalAlignment="Center"
                            CornerRadius="10"
                            BorderThickness="1" BorderBrush="DarkOrange"
                            Width="200"
                            Height="300"
                            Padding="5"
                            Background="#060405">
                            <StackPanel Orientation="Vertical">
                                <DockPanel Height="150">
                                    <Border Height="140"
                                        Padding="3 0 3 0"
                                        CornerRadius="10"
                                        BorderThickness="1.6" BorderBrush="Gray">
                                        <Border.Background>
                                            <ImageBrush Stretch="Fill" ImageSource="{Binding Image, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Border.Background>
                                    </Border>
                                </DockPanel>
                                <StackPanel VerticalAlignment="Center" Margin="0 9">
                                    <TextBlock FontSize="16" FontWeight="DemiBold" HorizontalAlignment="Center" 
                                           Foreground="White" Text="{Binding ProductName, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBlock HorizontalAlignment="Center" Foreground="White" 
                                           Text="{Binding ProductDescription, UpdateSourceTrigger=PropertyChanged}" />

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontSize="15" HorizontalAlignment="Left"  
                                               TextAlignment="Left" Width="40" Foreground="White" 
                                               Text="{Binding Price, UpdateSourceTrigger=PropertyChanged, StringFormat=\{0\}$}" />
                                        <Button Style="{StaticResource LikeButtonStyle}" 
                                        Command="{Binding DataContext.LikeCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                                        CommandParameter="{Binding}" 
                                        Margin="20 5"/>
                                        <TextBlock HorizontalAlignment="Right" FontSize="15"  TextAlignment="Right"  Foreground="White" Text="{Binding Quantity, UpdateSourceTrigger=PropertyChanged, StringFormat=\{0\} pieces}" />
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Margin="10" Orientation="Horizontal">
                                    <Button FontSize="12" Content="Add to Cart" Margin="0 0 5 0" Command="{Binding ElementName=ListViewProducts,Path=DataContext.AddToCartCommand}" CommandParameter="{Binding}"/>
                                    <Button FontSize="12" Content="Details" Command="{Binding ElementName=ListViewProducts,Path=DataContext.DetailsCommand}" CommandParameter="{Binding}"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
        </ScrollViewer>
    </Grid>

</Page>
